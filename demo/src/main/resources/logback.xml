<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration>
<configuration debug="true" scan="true" scanPeriod="30 seconds"><!-- 'milliseconds','seconds','minutes' and 'hours' -->
	<contextName>demo</contextName>
	<Property name="log.base" value="/log/" />
	<Property name="log.name" value="demo" />
	<jmxConfigurator />
	<!-- 控制台输出日志 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%-5level [%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %X{req.remoteHost} %X{req.requestURI} %X{username} %logger - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${log.base}${log.name}.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"><!-- rollover daily -->
			<FileNamePattern>${log.base}${log.name}-log-%d{yyyy-MM-dd}.%i.zip</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
				<maxFileSize>5MB</maxFileSize><!-- or whenever the file size reaches 5MB -->
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- <maxHistory></maxHistory> -->
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>%-5level [%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %X{req.remoteHost} %X{req.requestURI} %X{username} %logger.%method - %msg%n</Pattern>
		</encoder>
	</appender>

	<appender name="FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<File>${log.base}${log.name}-err.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"><!-- rollover daily -->
			<FileNamePattern>${log.base}${log.name}-log-%d{yyyy-MM-dd}.%i.zip</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
				<maxFileSize>5MB</maxFileSize><!-- or whenever the file size reaches 5MB -->
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- <maxHistory></maxHistory> -->
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>%-5level [%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %X{req.remoteHost} %X{req.requestURI} %X{username} %logger.%method - %msg%n</Pattern>
		</encoder>
	</appender>

	<appender name="TRACE_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${log.base}${log.name}-trace.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<FileNamePattern>${log.base}${log.name}-trace.log.%i.zip</FileNamePattern>
			<MinIndex>1</MinIndex>
			<MaxIndex>12</MaxIndex>
		</rollingPolicy>
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>%-5level [%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %X{req.remoteHost} %X{req.requestURI} %X{username} %logger.%method - %msg%n</Pattern>
		</encoder>
	</appender>
	
	<root level="debug">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
		<appender-ref ref="FILE-ERROR" />
	</root>

	<!--这里指定logger name 是为jmx设置日志级别做铺垫 -->
	<logger name="com.idasound.ju321" level="info" />
	<logger name="com.edasoft.efa" level="info" />
   
    <!--log4jdbc -->  
    <logger name="com.ibatis" level="debug" />
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="debug" />
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="debug" />
    <logger name="org.mybatis.generator" level="debug" />
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="debug" />
    <logger name="java.sql.Connection" level="debug" />
    <logger name="java.sql.Statement" level="debug" />
    <logger name="java.sql.PreparedStatement" level="debug" />
</configuration>
